<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scotch & Soda - Product Catalog</title>
    <meta name="description" content="Scotch & Soda product catalog optimized for social media advertising">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, rgba(0, 191, 165, 0.08) 0%, rgba(0, 191, 165, 0.03) 100%);
            color: #1E1E2F;
            min-height: 100vh;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        header {
            text-align: center;
            margin-bottom: 50px;
            padding-top: 20px;
        }

        .logo {
            width: 120px;
            height: auto;
            margin-bottom: 25px;
        }

        h1 {
            font-size: clamp(2rem, 4vw, 2.8rem);
            font-weight: 700;
            margin-bottom: 15px;
            color: #1E1E2F;
        }

        .subtitle {
            color: #666;
            font-size: clamp(1.1rem, 2vw, 1.3rem);
            font-weight: 400;
            max-width: 700px;
            margin: 0 auto;
            line-height: 1.6;
        }

        .main-card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 10px 30px rgba(18, 18, 18, 0.06);
            margin-bottom: 40px;
            border: 1px solid rgba(0, 191, 165, 0.1);
        }

        .feed-section {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 25px;
            margin-bottom: 40px;
        }

        .feed-card {
            background: white;
            border: 1px solid rgba(0, 191, 165, 0.15);
            border-radius: 16px;
            padding: 30px;
            text-align: center;
            transition: all 0.3s ease;
        }

        .feed-card:hover {
            transform: translateY(-3px);
            border-color: rgba(0, 191, 165, 0.3);
            box-shadow: 0 8px 25px rgba(0, 191, 165, 0.12);
        }

        .feed-icon {
            font-size: 3rem;
            margin-bottom: 15px;
            opacity: 0.9;
        }

        .feed-title {
            font-size: 1.3rem;
            font-weight: 600;
            margin-bottom: 10px;
            color: #1E1E2F;
        }

        .feed-desc {
            color: #666;
            font-size: 0.95rem;
            line-height: 1.5;
            margin-bottom: 20px;
        }

        .feed-link {
            display: inline-block;
            padding: 12px 28px;
            background: #FFB347;
            color: #000;
            text-decoration: none;
            border-radius: 10px;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(255, 179, 71, 0.2);
        }

        .feed-link:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(255, 179, 71, 0.3);
        }

        .stats-section {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 25px;
            margin-bottom: 50px;
        }

        .stat-card {
            background: white;
            border: 1px solid rgba(0, 191, 165, 0.1);
            padding: 30px;
            border-radius: 16px;
            text-align: center;
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-3px);
            border-color: rgba(0, 191, 165, 0.25);
            box-shadow: 0 5px 20px rgba(0, 191, 165, 0.08);
        }

        .stat-value {
            font-size: 2.5rem;
            font-weight: 700;
            color: #00BFA5;
            margin-bottom: 8px;
        }

        .stat-label {
            color: #666;
            font-size: 1rem;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .products-preview {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 40px;
            margin-bottom: 40px;
            border: 1px solid rgba(0, 191, 165, 0.1);
        }

        .section-title {
            font-size: 1.8rem;
            font-weight: 600;
            margin-bottom: 30px;
            text-align: center;
            color: #1E1E2F;
        }

        /* Controls for filtering and view options */
        .controls {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            margin-bottom: 30px;
            justify-content: center;
            align-items: center;
        }

        .filter-button {
            padding: 8px 20px;
            background: white;
            border: 2px solid #00BFA5;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .filter-button:hover {
            background: #00BFA5;
            color: white;
        }

        .filter-button.active {
            background: #00BFA5;
            color: white;
        }

        .view-toggle {
            display: flex;
            gap: 10px;
            margin-left: auto;
        }

        .view-button {
            padding: 8px 16px;
            background: white;
            border: 1px solid #ddd;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .view-button.active {
            background: #00BFA5;
            color: white;
            border-color: #00BFA5;
        }

        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .products-grid.list-view {
            grid-template-columns: 1fr;
            gap: 15px;
        }

        .product-preview {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            border: 1px solid rgba(0, 191, 165, 0.1);
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .product-preview:hover {
            transform: translateY(-3px);
            border-color: rgba(0, 191, 165, 0.3);
            box-shadow: 0 8px 20px rgba(0, 191, 165, 0.1);
        }

        .products-grid.list-view .product-preview {
            display: flex;
            align-items: center;
            padding: 15px;
        }

        .product-image {
            aspect-ratio: 1;
            background: #f8f9fa;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }

        .products-grid.list-view .product-image {
            width: 100px;
            height: 100px;
            flex-shrink: 0;
            margin-right: 20px;
        }

        .product-image img {
            width: 100%;
            height: 100%;
            object-fit: contain;
            transition: transform 0.3s ease;
        }

        .product-preview:hover .product-image img {
            transform: scale(1.05);
        }

        .product-info {
            padding: 15px;
            text-align: center;
        }

        .products-grid.list-view .product-info {
            flex: 1;
            text-align: left;
        }

        .product-title {
            font-size: 0.9rem;
            color: #1E1E2F;
            font-weight: 600;
            margin-bottom: 5px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        .products-grid.list-view .product-title {
            white-space: normal;
            margin-bottom: 8px;
        }

        .product-price {
            color: #00BFA5;
            font-weight: 600;
            font-size: 1rem;
        }

        .product-availability {
            font-size: 0.85rem;
            color: #666;
            margin-top: 5px;
        }

        .product-availability.in-stock {
            color: #00BFA5;
        }

        .product-availability.out-of-stock {
            color: #ff4444;
        }

        /* Pagination */
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            margin-top: 30px;
        }

        .page-button {
            padding: 8px 12px;
            background: white;
            border: 1px solid #ddd;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .page-button:hover:not(:disabled) {
            background: #00BFA5;
            color: white;
            border-color: #00BFA5;
        }

        .page-button.active {
            background: #00BFA5;
            color: white;
            border-color: #00BFA5;
        }

        .page-button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .page-info {
            padding: 0 15px;
            color: #666;
        }

        footer {
            background: white;
            border-radius: 20px;
            padding: 40px;
            text-align: center;
            margin-top: 60px;
            border: 1px solid rgba(0, 191, 165, 0.1);
        }

        .footer-content {
            max-width: 800px;
            margin: 0 auto;
        }

        .footer-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 15px;
            color: #1E1E2F;
        }

        .footer-text {
            color: #666;
            line-height: 1.6;
            margin-bottom: 25px;
        }

        .loading {
            text-align: center;
            padding: 60px;
            color: #666;
        }

        .spinner {
            width: 50px;
            height: 50px;
            margin: 20px auto;
            border: 3px solid #F1F2F6;
            border-top: 3px solid #00BFA5;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .error {
            background: #fee;
            color: #c33;
            padding: 25px;
            border-radius: 12px;
            text-align: center;
            margin: 20px 0;
            border: 1px solid #fdd;
        }

        @media (max-width: 768px) {
            .container {
                padding: 15px;
            }

            .main-card, .products-preview, footer {
                padding: 25px;
            }

            .logo {
                width: 100px;
            }

            .products-grid {
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
                gap: 15px;
            }

            .feed-section {
                grid-template-columns: 1fr;
            }

            .stats-section {
                grid-template-columns: repeat(2, 1fr);
                gap: 15px;
            }

            .controls {
                flex-direction: column;
            }

            .view-toggle {
                margin-left: 0;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <img src="https://cdn.shopify.com/s/files/1/0910/8389/9266/files/ChatGPT_Image_Jun_12_2025_01_05_41_PM.png?v=1749729963" 
                 alt="Scotch & Soda" 
                 class="logo">
            <h1>Product Catalog</h1>
            <p class="subtitle">Premium fashion products optimized for social media advertising. All images professionally processed at 1080x1080px.</p>
        </header>

        <div class="main-card">
            <div class="feed-section">
                <div class="feed-card">
                    <div class="feed-icon">📱</div>
                    <h3 class="feed-title">Facebook Catalog</h3>
                    <p class="feed-desc">Complete product feed ready for Meta Business Manager integration</p>
                    <a href="/facebook-feed.xml" class="feed-link" target="_blank">View Feed</a>
                </div>
                <div class="feed-card">
                    <div class="feed-icon">📊</div>
                    <h3 class="feed-title">Product Data</h3>
                    <p class="feed-desc">JSON format for custom integrations and analytics</p>
                    <a href="/products-data.json" class="feed-link" target="_blank">View Data</a>
                </div>
            </div>
        </div>

        <div class="stats-section" id="stats">
            <div class="stat-card">
                <div class="stat-value" id="totalProducts">0</div>
                <div class="stat-label">Total Products</div>
            </div>
            <div class="stat-card">
                <div class="stat-value" id="inStock">0</div>
                <div class="stat-label">In Stock</div>
            </div>
            <div class="stat-card">
                <div class="stat-value" id="avgPrice">£0</div>
                <div class="stat-label">Average Price</div>
            </div>
            <div class="stat-card">
                <div class="stat-value" id="lastUpdate">-</div>
                <div class="stat-label">Last Updated</div>
            </div>
        </div>

        <div class="products-preview">
            <h2 class="section-title">All Products</h2>
            
            <div class="controls">
                <button class="filter-button active" data-filter="all">All Products</button>
                <button class="filter-button" data-filter="in-stock">In Stock Only</button>
                <button class="filter-button" data-filter="men">Men's</button>
                <button class="filter-button" data-filter="women">Women's</button>
                
                <div class="view-toggle">
                    <button class="view-button active" data-view="grid">
                        <span>⊞</span> Grid
                    </button>
                    <button class="view-button" data-view="list">
                        <span>☰</span> List
                    </button>
                </div>
            </div>
            
            <div class="products-grid" id="productsGrid">
                <div class="loading">
                    <div class="spinner"></div>
                    <p>Loading products...</p>
                </div>
            </div>
            
            <div class="pagination" id="pagination"></div>
        </div>

        <footer>
            <div class="footer-content">
                <h3 class="footer-title">Integration Instructions</h3>
                <p class="footer-text">
                    To integrate this catalog with your Meta Business account, use the Facebook feed URL in your catalog settings. 
                    All product images are optimized for maximum performance on Facebook and Instagram advertising platforms.
                </p>
                <p style="color: #999; font-size: 0.9rem; margin-top: 30px;">
                    © 2025 Scotch & Soda. Product catalog auto-updated hourly.
                </p>
            </div>
        </footer>
    </div>

    <script>
        let allProducts = [];
        let filteredProducts = [];
        let currentPage = 1;
        const productsPerPage = 24;
        let currentFilter = 'all';
        let currentView = 'grid';

        // Load products on page load
        window.addEventListener('DOMContentLoaded', loadProducts);

        async function loadProducts() {
            try {
                // Since we're on the same domain, we can use relative paths
                const response = await fetch('/products-data.json');
                
                if (!response.ok) {
                    throw new Error('Failed to load products data');
                }
                
                allProducts = await response.json();
                
                // Remove duplicates based on ID
                const uniqueProducts = [];
                const seenIds = new Set();
                
                allProducts.forEach(product => {
                    if (!seenIds.has(product.id)) {
                        seenIds.add(product.id);
                        uniqueProducts.push(product);
                    }
                });
                
                allProducts = uniqueProducts;
                filteredProducts = [...allProducts];
                
                updateStats(allProducts);
                displayProducts();
                setupEventListeners();
            } catch (error) {
                console.error('Failed to load products:', error);
                document.getElementById('productsGrid').innerHTML = 
                    '<div class="error">Unable to load products. Please check if products-data.json exists.</div>';
            }
        }

        function updateStats(products) {
            // Total unique products
            document.getElementById('totalProducts').textContent = products.length;
            
            // In stock count
            const inStockCount = products.filter(p => p.availability === 'in stock').length;
            document.getElementById('inStock').textContent = inStockCount;
            
            // Average price in GBP
            if (products.length > 0) {
                const totalPrice = products.reduce((sum, p) => sum + (parseFloat(p.price) || 0), 0);
                const avgPrice = (totalPrice / products.length).toFixed(2);
                document.getElementById('avgPrice').textContent = '£' + avgPrice;
            }
            
            // Last update (current date/time)
            const now = new Date();
            const timeString = now.toLocaleTimeString('en-US', { 
                hour: 'numeric', 
                minute: '2-digit',
                hour12: true 
            });
            document.getElementById('lastUpdate').textContent = timeString;
        }

        function setupEventListeners() {
            // Filter buttons
            document.querySelectorAll('.filter-button').forEach(button => {
                button.addEventListener('click', (e) => {
                    document.querySelectorAll('.filter-button').forEach(b => b.classList.remove('active'));
                    e.target.classList.add('active');
                    currentFilter = e.target.dataset.filter;
                    filterProducts();
                });
            });

            // View toggle buttons
            document.querySelectorAll('.view-button').forEach(button => {
                button.addEventListener('click', (e) => {
                    document.querySelectorAll('.view-button').forEach(b => b.classList.remove('active'));
                    e.currentTarget.classList.add('active');
                    currentView = e.currentTarget.dataset.view;
                    
                    const grid = document.getElementById('productsGrid');
                    if (currentView === 'list') {
                        grid.classList.add('list-view');
                    } else {
                        grid.classList.remove('list-view');
                    }
                });
            });
        }

        function filterProducts() {
            currentPage = 1;
            
            switch(currentFilter) {
                case 'in-stock':
                    filteredProducts = allProducts.filter(p => p.availability === 'in stock');
                    break;
                case 'men':
                    filteredProducts = allProducts.filter(p => 
                        p.categories && p.categories.toLowerCase().includes("men")
                    );
                    break;
                case 'women':
                    filteredProducts = allProducts.filter(p => 
                        p.categories && (p.categories.toLowerCase().includes("women") || 
                                       p.categories.toLowerCase().includes("ladies"))
                    );
                    break;
                default:
                    filteredProducts = [...allProducts];
            }
            
            displayProducts();
        }

        function displayProducts() {
            const grid = document.getElementById('productsGrid');
            
            if (filteredProducts.length === 0) {
                grid.innerHTML = '<div class="error">No products found.</div>';
                document.getElementById('pagination').innerHTML = '';
                return;
            }
            
            // Calculate pagination
            const totalPages = Math.ceil(filteredProducts.length / productsPerPage);
            const startIndex = (currentPage - 1) * productsPerPage;
            const endIndex = startIndex + productsPerPage;
            const productsToShow = filteredProducts.slice(startIndex, endIndex);
            
            // Display products
            grid.innerHTML = productsToShow.map(product => {
                const stockClass = product.availability === 'in stock' ? 'in-stock' : 'out-of-stock';
                const stockText = product.availability === 'in stock' ? 'In Stock' : 'Out of Stock';
                
                return `
                    <div class="product-preview" onclick="window.open('${product.link}', '_blank')">
                        <div class="product-image">
                            <img src="${product.image || 'https://via.placeholder.com/300'}" 
                                 alt="${product.title}" 
                                 loading="lazy">
                        </div>
                        <div class="product-info">
                            <div class="product-title">${product.title}</div>
                            <div class="product-price">£${product.price}</div>
                            <div class="product-availability ${stockClass}">${stockText}</div>
                        </div>
                    </div>
                `;
            }).join('');
            
            // Update pagination
            updatePagination(totalPages);
        }

        function updatePagination(totalPages) {
            const pagination = document.getElementById('pagination');
            
            if (totalPages <= 1) {
                pagination.innerHTML = '';
                return;
            }
            
            let paginationHTML = '';
            
            // Previous button
            paginationHTML += `
                <button class="page-button" ${currentPage === 1 ? 'disabled' : ''} 
                        onclick="changePage(${currentPage - 1})">
                    Previous
                </button>
            `;
            
            // Page numbers
            const maxButtons = 5;
            let startPage = Math.max(1, currentPage - Math.floor(maxButtons / 2));
            let endPage = Math.min(totalPages, startPage + maxButtons - 1);
            
            if (endPage - startPage < maxButtons - 1) {
                startPage = Math.max(1, endPage - maxButtons + 1);
            }
            
            if (startPage > 1) {
                paginationHTML += `
                    <button class="page-button" onclick="changePage(1)">1</button>
                    ${startPage > 2 ? '<span>...</span>' : ''}
                `;
            }
            
            for (let i = startPage; i <= endPage; i++) {
                paginationHTML += `
                    <button class="page-button ${i === currentPage ? 'active' : ''}" 
                            onclick="changePage(${i})">${i}</button>
                `;
            }
            
            if (endPage < totalPages) {
                paginationHTML += `
                    ${endPage < totalPages - 1 ? '<span>...</span>' : ''}
                    <button class="page-button" onclick="changePage(${totalPages})">${totalPages}</button>
                `;
            }
            
            // Next button
            paginationHTML += `
                <button class="page-button" ${currentPage === totalPages ? 'disabled' : ''} 
                        onclick="changePage(${currentPage + 1})">
                    Next
                </button>
            `;
            
            // Page info
            paginationHTML += `
                <span class="page-info">
                    Showing ${(currentPage - 1) * productsPerPage + 1}-${Math.min(currentPage * productsPerPage, filteredProducts.length)} 
                    of ${filteredProducts.length} products
                </span>
            `;
            
            pagination.innerHTML = paginationHTML;
        }

        function changePage(page) {
            currentPage = page;
            displayProducts();
            // Scroll to top of products
            document.querySelector('.products-preview').scrollIntoView({ behavior: 'smooth' });
        }
    </script>
</body>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scotch & Soda - Product Catalog</title>
    <meta name="description" content="Scotch & Soda product catalog optimized for social media advertising">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, rgba(0, 191, 165, 0.08) 0%, rgba(0, 191, 165, 0.03) 100%);
            color: #1E1E2F;
            min-height: 100vh;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        header {
            text-align: center;
            margin-bottom: 50px;
            padding-top: 20px;
        }

        .logo {
            width: 120px;
            height: auto;
            margin-bottom: 25px;
        }

        h1 {
            font-size: clamp(2rem, 4vw, 2.8rem);
            font-weight: 700;
            margin-bottom: 15px;
            color: #1E1E2F;
        }

        .subtitle {
            color: #666;
            font-size: clamp(1.1rem, 2vw, 1.3rem);
            font-weight: 400;
            max-width: 700px;
            margin: 0 auto;
            line-height: 1.6;
        }

        .main-card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 10px 30px rgba(18, 18, 18, 0.06);
            margin-bottom: 40px;
            border: 1px solid rgba(0, 191, 165, 0.1);
        }

        .feed-section {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 25px;
            margin-bottom: 40px;
        }

        .feed-card {
            background: white;
            border: 1px solid rgba(0, 191, 165, 0.15);
            border-radius: 16px;
            padding: 30px;
            text-align: center;
            transition: all 0.3s ease;
        }

        .feed-card:hover {
            transform: translateY(-3px);
            border-color: rgba(0, 191, 165, 0.3);
            box-shadow: 0 8px 25px rgba(0, 191, 165, 0.12);
        }

        .feed-icon {
            font-size: 3rem;
            margin-bottom: 15px;
            opacity: 0.9;
        }

        .feed-title {
            font-size: 1.3rem;
            font-weight: 600;
            margin-bottom: 10px;
            color: #1E1E2F;
        }

        .feed-desc {
            color: #666;
            font-size: 0.95rem;
            line-height: 1.5;
            margin-bottom: 20px;
        }

        .feed-link {
            display: inline-block;
            padding: 12px 28px;
            background: #FFB347;
            color: #000;
            text-decoration: none;
            border-radius: 10px;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(255, 179, 71, 0.2);
        }

        .feed-link:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(255, 179, 71, 0.3);
        }

        .stats-section {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 25px;
            margin-bottom: 50px;
        }

        .stat-card {
            background: white;
            border: 1px solid rgba(0, 191, 165, 0.1);
            padding: 30px;
            border-radius: 16px;
            text-align: center;
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-3px);
            border-color: rgba(0, 191, 165, 0.25);
            box-shadow: 0 5px 20px rgba(0, 191, 165, 0.08);
        }

        .stat-value {
            font-size: 2.5rem;
            font-weight: 700;
            color: #00BFA5;
            margin-bottom: 8px;
        }

        .stat-label {
            color: #666;
            font-size: 1rem;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .products-preview {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 40px;
            margin-bottom: 40px;
            border: 1px solid rgba(0, 191, 165, 0.1);
        }

        .section-title {
            font-size: 1.8rem;
            font-weight: 600;
            margin-bottom: 30px;
            text-align: center;
            color: #1E1E2F;
        }

        /* Controls for filtering and view options */
        .controls {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            margin-bottom: 30px;
            justify-content: center;
            align-items: center;
        }

        .filter-button {
            padding: 8px 20px;
            background: white;
            border: 2px solid #00BFA5;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .filter-button:hover {
            background: #00BFA5;
            color: white;
        }

        .filter-button.active {
            background: #00BFA5;
            color: white;
        }

        .view-toggle {
            display: flex;
            gap: 10px;
            margin-left: auto;
        }

        .view-button {
            padding: 8px 16px;
            background: white;
            border: 1px solid #ddd;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .view-button.active {
            background: #00BFA5;
            color: white;
            border-color: #00BFA5;
        }

        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .products-grid.list-view {
            grid-template-columns: 1fr;
            gap: 15px;
        }

        .product-preview {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            border: 1px solid rgba(0, 191, 165, 0.1);
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .product-preview:hover {
            transform: translateY(-3px);
            border-color: rgba(0, 191, 165, 0.3);
            box-shadow: 0 8px 20px rgba(0, 191, 165, 0.1);
        }

        .products-grid.list-view .product-preview {
            display: flex;
            align-items: center;
            padding: 15px;
        }

        .product-image {
            aspect-ratio: 1;
            background: #f8f9fa;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }

        .products-grid.list-view .product-image {
            width: 100px;
            height: 100px;
            flex-shrink: 0;
            margin-right: 20px;
        }

        .product-image img {
            width: 100%;
            height: 100%;
            object-fit: contain;
            transition: transform 0.3s ease;
        }

        .product-preview:hover .product-image img {
            transform: scale(1.05);
        }

        .product-info {
            padding: 15px;
            text-align: center;
        }

        .products-grid.list-view .product-info {
            flex: 1;
            text-align: left;
        }

        .product-title {
            font-size: 0.9rem;
            color: #1E1E2F;
            font-weight: 600;
            margin-bottom: 5px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        .products-grid.list-view .product-title {
            white-space: normal;
            margin-bottom: 8px;
        }

        .product-price {
            color: #00BFA5;
            font-weight: 600;
            font-size: 1rem;
        }

        .product-availability {
            font-size: 0.85rem;
            color: #666;
            margin-top: 5px;
        }

        .product-availability.in-stock {
            color: #00BFA5;
        }

        .product-availability.out-of-stock {
            color: #ff4444;
        }

        /* Pagination */
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            margin-top: 30px;
        }

        .page-button {
            padding: 8px 12px;
            background: white;
            border: 1px solid #ddd;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .page-button:hover:not(:disabled) {
            background: #00BFA5;
            color: white;
            border-color: #00BFA5;
        }

        .page-button.active {
            background: #00BFA5;
            color: white;
            border-color: #00BFA5;
        }

        .page-button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .page-info {
            padding: 0 15px;
            color: #666;
        }

        footer {
            background: white;
            border-radius: 20px;
            padding: 40px;
            text-align: center;
            margin-top: 60px;
            border: 1px solid rgba(0, 191, 165, 0.1);
        }

        .footer-content {
            max-width: 800px;
            margin: 0 auto;
        }

        .footer-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 15px;
            color: #1E1E2F;
        }

        .footer-text {
            color: #666;
            line-height: 1.6;
            margin-bottom: 25px;
        }

        .loading {
            text-align: center;
            padding: 60px;
            color: #666;
        }

        .spinner {
            width: 50px;
            height: 50px;
            margin: 20px auto;
            border: 3px solid #F1F2F6;
            border-top: 3px solid #00BFA5;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .error {
            background: #fee;
            color: #c33;
            padding: 25px;
            border-radius: 12px;
            text-align: center;
            margin: 20px 0;
            border: 1px solid #fdd;
        }

        @media (max-width: 768px) {
            .container {
                padding: 15px;
            }

            .main-card, .products-preview, footer {
                padding: 25px;
            }

            .logo {
                width: 100px;
            }

            .products-grid {
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
                gap: 15px;
            }

            .feed-section {
                grid-template-columns: 1fr;
            }

            .stats-section {
                grid-template-columns: repeat(2, 1fr);
                gap: 15px;
            }

            .controls {
                flex-direction: column;
            }

            .view-toggle {
                margin-left: 0;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <img src="https://cdn.shopify.com/s/files/1/0910/8389/9266/files/ChatGPT_Image_Jun_12_2025_01_05_41_PM.png?v=1749729963" 
                 alt="Scotch & Soda" 
                 class="logo">
            <h1>Product Catalog</h1>
            <p class="subtitle">Premium fashion products optimized for social media advertising. All images professionally processed at 1080x1080px.</p>
        </header>

        <div class="main-card">
            <div class="feed-section">
                <div class="feed-card">
                    <div class="feed-icon">📱</div>
                    <h3 class="feed-title">Facebook Catalog</h3>
                    <p class="feed-desc">Complete product feed ready for Meta Business Manager integration</p>
                    <a href="/facebook-feed.xml" class="feed-link" target="_blank">View Feed</a>
                </div>
                <div class="feed-card">
                    <div class="feed-icon">📊</div>
                    <h3 class="feed-title">Product Data</h3>
                    <p class="feed-desc">JSON format for custom integrations and analytics</p>
                    <a href="/products-data.json" class="feed-link" target="_blank">View Data</a>
                </div>
            </div>
        </div>

        <div class="stats-section" id="stats">
            <div class="stat-card">
                <div class="stat-value" id="totalProducts">0</div>
                <div class="stat-label">Total Products</div>
            </div>
            <div class="stat-card">
                <div class="stat-value" id="inStock">0</div>
                <div class="stat-label">In Stock</div>
            </div>
            <div class="stat-card">
                <div class="stat-value" id="avgPrice">£0</div>
                <div class="stat-label">Average Price</div>
            </div>
            <div class="stat-card">
                <div class="stat-value" id="lastUpdate">-</div>
                <div class="stat-label">Last Updated</div>
            </div>
        </div>

        <div class="products-preview">
            <h2 class="section-title">All Products</h2>
            
            <div class="controls">
                <button class="filter-button active" data-filter="all">All Products</button>
                <button class="filter-button" data-filter="in-stock">In Stock Only</button>
                <button class="filter-button" data-filter="men">Men's</button>
                <button class="filter-button" data-filter="women">Women's</button>
                
                <div class="view-toggle">
                    <button class="view-button active" data-view="grid">
                        <span>⊞</span> Grid
                    </button>
                    <button class="view-button" data-view="list">
                        <span>☰</span> List
                    </button>
                </div>
            </div>
            
            <div class="products-grid" id="productsGrid">
                <div class="loading">
                    <div class="spinner"></div>
                    <p>Loading products...</p>
                </div>
            </div>
            
            <div class="pagination" id="pagination"></div>
        </div>

        <footer>
            <div class="footer-content">
                <h3 class="footer-title">Integration Instructions</h3>
                <p class="footer-text">
                    To integrate this catalog with your Meta Business account, use the Facebook feed URL in your catalog settings. 
                    All product images are optimized for maximum performance on Facebook and Instagram advertising platforms.
                </p>
                <p style="color: #999; font-size: 0.9rem; margin-top: 30px;">
                    © 2025 Scotch & Soda. Product catalog auto-updated hourly.
                </p>
            </div>
        </footer>
    </div>

    <script>
        let allProducts = [];
        let filteredProducts = [];
        let currentPage = 1;
        const productsPerPage = 24;
        let currentFilter = 'all';
        let currentView = 'grid';

        // Load products on page load
        window.addEventListener('DOMContentLoaded', loadProducts);

        async function loadProducts() {
            try {
                // Since we're on the same domain, we can use relative paths
                const response = await fetch('/products-data.json');
                
                if (!response.ok) {
                    throw new Error('Failed to load products data');
                }
                
                allProducts = await response.json();
                
                // Remove duplicates based on ID
                const uniqueProducts = [];
                const seenIds = new Set();
                
                allProducts.forEach(product => {
                    if (!seenIds.has(product.id)) {
                        seenIds.add(product.id);
                        uniqueProducts.push(product);
                    }
                });
                
                allProducts = uniqueProducts;
                filteredProducts = [...allProducts];
                
                updateStats(allProducts);
                displayProducts();
                setupEventListeners();
            } catch (error) {
                console.error('Failed to load products:', error);
                document.getElementById('productsGrid').innerHTML = 
                    '<div class="error">Unable to load products. Please check if products-data.json exists.</div>';
            }
        }

        function updateStats(products) {
            // Total unique products
            document.getElementById('totalProducts').textContent = products.length;
            
            // In stock count
            const inStockCount = products.filter(p => p.availability === 'in stock').length;
            document.getElementById('inStock').textContent = inStockCount;
            
            // Average price in GBP
            if (products.length > 0) {
                const totalPrice = products.reduce((sum, p) => sum + (parseFloat(p.price) || 0), 0);
                const avgPrice = (totalPrice / products.length).toFixed(2);
                document.getElementById('avgPrice').textContent = '£' + avgPrice;
            }
            
            // Last update (current date/time)
            const now = new Date();
            const timeString = now.toLocaleTimeString('en-US', { 
                hour: 'numeric', 
                minute: '2-digit',
                hour12: true 
            });
            document.getElementById('lastUpdate').textContent = timeString;
        }

        function setupEventListeners() {
            // Filter buttons
            document.querySelectorAll('.filter-button').forEach(button => {
                button.addEventListener('click', (e) => {
                    document.querySelectorAll('.filter-button').forEach(b => b.classList.remove('active'));
                    e.target.classList.add('active');
                    currentFilter = e.target.dataset.filter;
                    filterProducts();
                });
            });

            // View toggle buttons
            document.querySelectorAll('.view-button').forEach(button => {
                button.addEventListener('click', (e) => {
                    document.querySelectorAll('.view-button').forEach(b => b.classList.remove('active'));
                    e.currentTarget.classList.add('active');
                    currentView = e.currentTarget.dataset.view;
                    
                    const grid = document.getElementById('productsGrid');
                    if (currentView === 'list') {
                        grid.classList.add('list-view');
                    } else {
                        grid.classList.remove('list-view');
                    }
                });
            });
        }

        function filterProducts() {
            currentPage = 1;
            
            switch(currentFilter) {
                case 'in-stock':
                    filteredProducts = allProducts.filter(p => p.availability === 'in stock');
                    break;
                case 'men':
                    filteredProducts = allProducts.filter(p => 
                        p.categories && p.categories.toLowerCase().includes("men")
                    );
                    break;
                case 'women':
                    filteredProducts = allProducts.filter(p => 
                        p.categories && (p.categories.toLowerCase().includes("women") || 
                                       p.categories.toLowerCase().includes("ladies"))
                    );
                    break;
                default:
                    filteredProducts = [...allProducts];
            }
            
            displayProducts();
        }

        function displayProducts() {
            const grid = document.getElementById('productsGrid');
            
            if (filteredProducts.length === 0) {
                grid.innerHTML = '<div class="error">No products found.</div>';
                document.getElementById('pagination').innerHTML = '';
                return;
            }
            
            // Calculate pagination
            const totalPages = Math.ceil(filteredProducts.length / productsPerPage);
            const startIndex = (currentPage - 1) * productsPerPage;
            const endIndex = startIndex + productsPerPage;
            const productsToShow = filteredProducts.slice(startIndex, endIndex);
            
            // Display products
            grid.innerHTML = productsToShow.map(product => {
                const stockClass = product.availability === 'in stock' ? 'in-stock' : 'out-of-stock';
                const stockText = product.availability === 'in stock' ? 'In Stock' : 'Out of Stock';
                
                return `
                    <div class="product-preview" onclick="window.open('${product.link}', '_blank')">
                        <div class="product-image">
                            <img src="${product.image || 'https://via.placeholder.com/300'}" 
                                 alt="${product.title}" 
                                 loading="lazy">
                        </div>
                        <div class="product-info">
                            <div class="product-title">${product.title}</div>
                            <div class="product-price">£${product.price}</div>
                            <div class="product-availability ${stockClass}">${stockText}</div>
                        </div>
                    </div>
                `;
            }).join('');
            
            // Update pagination
            updatePagination(totalPages);
        }

        function updatePagination(totalPages) {
            const pagination = document.getElementById('pagination');
            
            if (totalPages <= 1) {
                pagination.innerHTML = '';
                return;
            }
            
            let paginationHTML = '';
            
            // Previous button
            paginationHTML += `
                <button class="page-button" ${currentPage === 1 ? 'disabled' : ''} 
                        onclick="changePage(${currentPage - 1})">
                    Previous
                </button>
            `;
            
            // Page numbers
            const maxButtons = 5;
            let startPage = Math.max(1, currentPage - Math.floor(maxButtons / 2));
            let endPage = Math.min(totalPages, startPage + maxButtons - 1);
            
            if (endPage - startPage < maxButtons - 1) {
                startPage = Math.max(1, endPage - maxButtons + 1);
            }
            
            if (startPage > 1) {
                paginationHTML += `
                    <button class="page-button" onclick="changePage(1)">1</button>
                    ${startPage > 2 ? '<span>...</span>' : ''}
                `;
            }
            
            for (let i = startPage; i <= endPage; i++) {
                paginationHTML += `
                    <button class="page-button ${i === currentPage ? 'active' : ''}" 
                            onclick="changePage(${i})">${i}</button>
                `;
            }
            
            if (endPage < totalPages) {
                paginationHTML += `
                    ${endPage < totalPages - 1 ? '<span>...</span>' : ''}
                    <button class="page-button" onclick="changePage(${totalPages})">${totalPages}</button>
                `;
            }
            
            // Next button
            paginationHTML += `
                <button class="page-button" ${currentPage === totalPages ? 'disabled' : ''} 
                        onclick="changePage(${currentPage + 1})">
                    Next
                </button>
            `;
            
            // Page info
            paginationHTML += `
                <span class="page-info">
                    Showing ${(currentPage - 1) * productsPerPage + 1}-${Math.min(currentPage * productsPerPage, filteredProducts.length)} 
                    of ${filteredProducts.length} products
                </span>
            `;
            
            pagination.innerHTML = paginationHTML;
        }

        function changePage(page) {
            currentPage = page;
            displayProducts();
            // Scroll to top of products
            document.querySelector('.products-preview').scrollIntoView({ behavior: 'smooth' });
        }
    </script>
</body>
</html>        }

        .product-preview:hover .product-image img {
            transform: scale(1.05);
        }

        .product-info {
            padding: 15px;
            text-align: center;
        }

        .product-title {
            font-size: 0.9rem;
            color: #1E1E2F;
            font-weight: 600;
            margin-bottom: 5px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        .product-price {
            color: #00BFA5;
            font-weight: 600;
            font-size: 1rem;
        }

        footer {
            background: white;
            border-radius: 20px;
            padding: 40px;
            text-align: center;
            margin-top: 60px;
            border: 1px solid rgba(0, 191, 165, 0.1);
        }

        .footer-content {
            max-width: 800px;
            margin: 0 auto;
        }

        .footer-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 15px;
            color: #1E1E2F;
        }

        .footer-text {
            color: #666;
            line-height: 1.6;
            margin-bottom: 25px;
        }

        .loading {
            text-align: center;
            padding: 60px;
            color: #666;
        }

        .spinner {
            width: 50px;
            height: 50px;
            margin: 20px auto;
            border: 3px solid #F1F2F6;
            border-top: 3px solid #00BFA5;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .error {
            background: #fee;
            color: #c33;
            padding: 25px;
            border-radius: 12px;
            text-align: center;
            margin: 20px 0;
            border: 1px solid #fdd;
        }

        @media (max-width: 768px) {
            .container {
                padding: 15px;
            }

            .main-card, .products-preview, footer {
                padding: 25px;
            }

            .logo {
                width: 100px;
            }

            .products-grid {
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
                gap: 15px;
            }

            .feed-section {
                grid-template-columns: 1fr;
            }

            .stats-section {
                grid-template-columns: repeat(2, 1fr);
                gap: 15px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <img src="https://cdn.shopify.com/s/files/1/0910/8389/9266/files/ChatGPT_Image_Jun_12_2025_01_05_41_PM.png?v=1749729963" 
                 alt="Scotch & Soda" 
                 class="logo">
            <h1>Product Catalog</h1>
            <p class="subtitle">Premium fashion products optimized for social media advertising. All images professionally processed at 1200x1200px.</p>
        </header>

        <div class="main-card">
            <div class="feed-section">
                <div class="feed-card">
                    <div class="feed-icon">📱</div>
                    <h3 class="feed-title">Facebook Catalog</h3>
                    <p class="feed-desc">Complete product feed ready for Meta Business Manager integration</p>
                    <a href="/facebook-feed.xml" class="feed-link" target="_blank">View Feed</a>
                </div>
                <div class="feed-card">
                    <div class="feed-icon">📊</div>
                    <h3 class="feed-title">Product Data</h3>
                    <p class="feed-desc">JSON format for custom integrations and analytics</p>
                    <a href="/products-data.json" class="feed-link" target="_blank">View Data</a>
                </div>
            </div>
        </div>

        <div class="stats-section" id="stats">
            <div class="stat-card">
                <div class="stat-value" id="totalProducts">0</div>
                <div class="stat-label">Total Products</div>
            </div>
            <div class="stat-card">
                <div class="stat-value" id="inStock">0</div>
                <div class="stat-label">In Stock</div>
            </div>
            <div class="stat-card">
                <div class="stat-value" id="avgPrice">€0</div>
                <div class="stat-label">Average Price</div>
            </div>
            <div class="stat-card">
                <div class="stat-value" id="lastUpdate">-</div>
                <div class="stat-label">Last Updated</div>
            </div>
        </div>

        <div class="products-preview">
            <h2 class="section-title">Featured Products</h2>
            <div class="products-grid" id="productsGrid">
                <div class="loading">
                    <div class="spinner"></div>
                    <p>Loading products...</p>
                </div>
            </div>
        </div>

        <footer>
            <div class="footer-content">
                <h3 class="footer-title">Integration Instructions</h3>
                <p class="footer-text">
                    To integrate this catalog with your Meta Business account, use the Facebook feed URL in your catalog settings. 
                    All product images are optimized for maximum performance on Facebook and Instagram advertising platforms.
                </p>
                <p style="color: #999; font-size: 0.9rem; margin-top: 30px;">
                    © 2025 Scotch & Soda. Product catalog auto-updated hourly.
                </p>
            </div>
        </footer>
    </div>

    <script>
        // Load products on page load
        window.addEventListener('DOMContentLoaded', loadProducts);

        async function loadProducts() {
            try {
                const response = await fetch('/products-data.json');
                const products = await response.json();
                
                updateStats(products);
                displayProducts(products);
            } catch (error) {
                console.error('Failed to load products:', error);
                document.getElementById('productsGrid').innerHTML = 
                    '<div class="error">Unable to load products. Please try again later.</div>';
            }
        }

        function updateStats(products) {
            // Total products
            document.getElementById('totalProducts').textContent = products.length;
            
            // In stock count
            const inStockCount = products.filter(p => p.availability === 'in stock').length;
            document.getElementById('inStock').textContent = inStockCount;
            
            // Average price
            if (products.length > 0) {
                const totalPrice = products.reduce((sum, p) => sum + (parseFloat(p.price) || 0), 0);
                const avgPrice = (totalPrice / products.length).toFixed(2);
                document.getElementById('avgPrice').textContent = '€' + avgPrice;
            }
            
            // Last update (current date/time)
            const now = new Date();
            const timeString = now.toLocaleTimeString('en-US', { 
                hour: 'numeric', 
                minute: '2-digit',
                hour12: true 
            });
            document.getElementById('lastUpdate').textContent = timeString;
        }

        function displayProducts(products) {
            const grid = document.getElementById('productsGrid');
            
            // Show only first 12 products as featured
            const featured = products.slice(0, 12);
            
            if (featured.length === 0) {
                grid.innerHTML = '<div class="error">No products available.</div>';
                return;
            }
            
            grid.innerHTML = featured.map(product => `
                <div class="product-preview" onclick="window.open('${product.link}', '_blank')">
                    <div class="product-image">
                        <img src="${product.image || 'https://via.placeholder.com/300'}" 
                             alt="${product.title}" 
                             loading="lazy">
                    </div>
                    <div class="product-info">
                        <div class="product-title">${product.title}</div>
                        <div class="product-price">€${product.price}</div>
                    </div>
                </div>
            `).join('');
        }
    </script>
</body>
</html>
